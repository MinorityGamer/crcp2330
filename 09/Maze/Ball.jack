class Ball {

   field int x, y; //the ball's x and y coordinate 
   field int rad; // radius of the ball in pxls

   /** Constructs the Ball at the start. */
   constructor Ball new(int Ax, int Ay, int Arad) {
      let x = Ax;
      let y = Ay;
      let rad = Arad;
      do draw();
      return this;
   }

   /** gets rid of ball */)
   method void del() {
      do Memory.deAlloc(this);
      return;
   }

   /** Draws the ball to the screen. */
   method void draw() {
      do Screen.setColor(true);
      do Screen.drawCircle(x, y, rad);
      return;
   }

   /** Moves the ball up by 2 pixels. */
   method void moveUp() {
      if (y > 1) {
         do Screen.setColor(false);
         do Screen.drawCircle(x, (y + rad) - 1, rad);
         let y = y - 2;
         do Screen.setColor(true);
         do Screen.drawCircle(x, y, x + rad, rad);
      }
      return;
   }

   /** Moves the ball down by 2 pixels. */
   method void moveDown() {
      if ((y + rad) < 254) {
         do Screen.setColor(false);
         do Screen.drawCircle(x, y, x + rad, rad);
         let y = y + 2;
         do Screen.setColor(true);
         do Screen.drawCircle(x, (y + rad) - 1, rad);
      }
      return;
   }

   /** Moves the ball left by 2 pixels. */
   method void moveLeft() {
      if (x > 1) {
         do Screen.setColor(false);
         do Screen.drawCircle((x + rad) - 1, y, rad);
         let x = x - 2;
         do Screen.setColor(true);
         do Screen.drawCircle(x, y, rad);
      }
      return;
   }

   /** Moves the ball right by 2 pixels. */
   method void moveRight() {
      if ((x + rad) < 510) {
         do Screen.setColor(false);
         do Screen.drawCircle(x, y, x + 1, rad);
         let x = x + 2;
         do Screen.setColor(true);
         do Screen.drawCircle((x + rad) - 1, y, rad);
      }
      return;
   }
}